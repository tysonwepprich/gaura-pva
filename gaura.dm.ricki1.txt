
    # Regional stochasticity
    # Negative binomial initial abundance, Ricker-logistic dynamics + immigration
    model {
    lambda ~ dunif(0, 5000)
    alpha ~ dunif(0, 20)
    P <- alpha/(alpha + lambda)
    iota ~ dunif(0, 10)
    sigma.nu ~ dunif(0, 5)
    tau.nu <- 1 / (sigma.nu * sigma.nu)



    for(i in 1:nSites){
      site.r[i] ~ dnorm(mean.r, tau.r)
      for (t in 1:nYears){
        # flower ratio
        fl.mean[i,t] ~ dnorm(-2, .5)T(-5,-1)
      }
    }

    # varying slopes by site
    for (v in 1:10){
      beta.mean[v] ~ dunif(-5, 5)
      sigma.beta[v] ~ dunif(0, 5)
      tau.beta[v] <- 1 / (sigma.beta[v] * sigma.beta[v])
      for (i in 1:nSites){
        site.beta[i, v] ~ dnorm(beta.mean[v], tau.beta[v])
      }
    }

    # growth rate 
    mean.r ~ dnorm(0, 0.001)
    sigma.r ~ dunif(0, 5)
    tau.r <- 1 / (sigma.r * sigma.r)

    for(t in 2:nYears) {
      for(i in 1:nSites){
        nu[i, t-1] ~ dnorm(0, tau.nu)
        }
      }
    
    for(i in 1:nSites) {
      N[i,1] ~ dnegbin(P, alpha)
      for(t in 2:nYears) {
        N[i,t] ~ dpois(muN[i, t-1])
        muN[i,t-1] <- N[i, t-1] * exp(r[i,t-1] + nu[i,t-1]) + iota

        r[i,t-1] <-        site.r[i] +      site.beta[i,1] * zyear[t-1]  +        
                                            site.beta[i,2] * zprec[t-1] + 
                                            site.beta[i,3] * zprec[t] + 
                                            site.beta[i,4] * ztemp[t-1] + 
                                            site.beta[i,5] * ztemp[t] +
                                            site.beta[i,6] * N[i,t-1]
      }
      for(t in 1:nYears) {
      # y[i,t] ~ dbin(0.87, N.fl[i,t])
      y[i,t] ~ dpois(N.fl[i,t])
      N.fl[i,t] ~ dbin(p[i,t], N[i,t])
      p[i,t] <-  1 / (1 + exp(-lp[i,t])) 
      lp[i,t] <-  flower[i,t] 
      flower[i,t] <-   fl.mean[i,t] +     site.beta[i,7] * zyear[t]  +        
                                            site.beta[i,8] * zprec[t] + 
                                            site.beta[i,9] * ztemp[t] +
                                            site.beta[i,10] * N[i,t]

      }
    }

    # derived predictions summed across creeks
    for (t in 1:nYears){
      creek[,t] <- c(sum(N[c(1:7), t]), sum(N[c(8:12), t]), sum(N[c(13:14), t]))
      total[t] <- sum(creek[,t])
    }


    }
    
