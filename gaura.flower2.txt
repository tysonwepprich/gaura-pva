
    # Model flower counts as variable of interest (ignoring rosette population)

    model {
    # starting population sizes with negative binomial
    lambda ~ dunif(0, 5000)
    alpha ~ dunif(0, 20)
    P <- alpha/(alpha + lambda)

    iota ~ dunif(0, 10) # immigration
    
    # # varying slopes by site for K, but not temp/prec/flow
    # for (v in 1:7){
    #   beta.mean[v] ~ dunif(-5, 5)
    # }

    beta.mean ~ dunif(-5, 5)

    sigma.beta ~ dunif(0, 5)
    tau.beta <- 1 / (sigma.beta * sigma.beta)
    for (i in 1:nSites){
      site.beta[i] ~ dnorm(beta.mean, tau.beta)
    }

    # for (v in 1:2){
    #   sigma.beta[v] ~ dunif(0, 5)
    #   tau.beta[v] <- 1 / (sigma.beta[v] * sigma.beta[v])
    #   for (i in 1:nSites){
    #     site.beta[i, v] ~ dnorm(beta.mean[v + 6], tau.beta[v])
    #     }
    #   }
    
    # growth rate varying by site
    mean.r ~ dnorm(0, 0.001)
    sigma.r ~ dunif(0, 5)
    tau.r <- 1 / (sigma.r * sigma.r)
    for(i in 1:nSites){
      site.r[i] ~ dnorm(mean.r, tau.r)
    }
    
    # environmental stochasticity in growth rates
    for(i in 1:nSites){
      sigma.nu[i] ~ dunif(0, 5)
      tau.nu[i] <- 1 / (sigma.nu[i] * sigma.nu[i])
      for(t in 2:nYears) {
        nu[i, t-1] ~ dnorm(0, tau.nu[i])
      }
    }
    
    for(i in 1:nSites) {
      N[i,1] ~ dnegbin(P, alpha)

      for(t in 2:nYears) {
        preds[i,t-1] <- N[i, t-1] * exp(r[i,t-1])
        N[i,t] ~ dpois(muN[i, t-1])
        muN[i,t-1] <- N[i, t-1] * exp(r[i,t-1] + nu[i, t-1]) + iota
    
        r[i,t-1] <-        site.r[i] +  #beta.mean[1] * zflow[t+1]  +
                                        # beta.mean[2] * zflow[t] +
                                        # beta.mean[3] * zflow[t-1] +
                                        # beta.mean[4] * ztemp[t+1] +
                                        # beta.mean[5] * ztemp[t] +
                                        # beta.mean[6] * ztemp[t-1] +
                                        site.beta[i] * log(N[i,t-1] + 1)
                                        # site.beta[i] * N[i,t-1]


        # r[i,t-2] <-        site.r[i] +  site.beta[i,1] * zflow[t]  +
        #                                 site.beta[i,2] * zflow[t-1] +
        #                                 site.beta[i,3] * zflow[t-2] +
        #                                 site.beta[i,4] * ztemp[t] +
        #                                 site.beta[i,5] * ztemp[t-1] +
        #                                 site.beta[i,6] * ztemp[t-2] +
        #                                 site.beta[i,7] * log(N[i,t-1] + 1) +
        #                                 site.beta[i,8] * log(N[i,t-2] + 1)
      }
      for(t in 1:nYears) {
        # y[i,t] ~ dbin(0.87, N[i,t])
        y[i,t] ~ dpois(N[i,t])
        }
    }
    
    # derived predictions summed across creeks
    for (t in 1:nYears){
      creek[,t] <- c(sum(N[c(1:6), t]), sum(N[c(7:11), t]), sum(N[c(12:13), t]))
      total[t] <- sum(creek[,t])
    }
    
    
    }
    
